on:
  - workflow_dispatch

jobs:
  test:
    permissions:
      id-token: write

    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/${{ secrets.MASTER_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github/providers/github'
          service_account: 'project-creator@${{ secrets.MASTER_PROJECT_NAME }}.iam.gserviceaccount.com'

      - uses: 'google-github-actions/setup-gcloud@v2'
      - run: gcloud info
      - run: gcloud projects list > /dev/null

      - name: 'Allocate a project ID'
        run: |
          export TIMESTAMP=$(date -u +%Y%m%d-%H%M%S);
          COMMIT_HASH=$(git rev-parse --short HEAD); \
            export PROJECT="capitalizer-$TIMESTAMP-$COMMIT_HASH"
          echo "Timestamp: $TIMESTAMP"
          echo "Project: $PROJECT"
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
          echo "PROJECT=$PROJECT" >> $GITHUB_ENV

      - name: 'Create Google Cloud Project'
        run: |
          gcloud projects \
            create $PROJECT \
            --name=$PROJECT \
            --organization=${{ secrets.ORGANIZATION }}
          gcloud services enable cloudbilling.googleapis.com --project=$PROJECT
          gcloud billing \
            projects link $PROJECT \
            --billing-account=${{ secrets.BILLING_ACCOUNT }}

      - name: 'Enable the services for building'
        run: |
          gcloud services enable artifactregistry.googleapis.com --project=$PROJECT
          gcloud services enable cloudbuild.googleapis.com --project=$PROJECT

      - name: 'Export configuration variables'
        run: |
          echo "REGION=${{ vars.REGION }}" >> $GITHUB_ENV
          echo "ZONE=${{ vars.ZONE }}" >> $GITHUB_ENV

      - name: 'Create the image repository'
        run: |
          gcloud artifacts \
            repositories create my-repository \
            --repository-format=DOCKER \
            --location=$REGION \
            --project=$PROJECT

      - name: 'Allocate a version'
        run: |
          APP_VERSION=$(grep '^version:' capitalizer/pubspec.yaml | awk '{print $2}'); \
            COMMIT_HASH=$(git rev-parse HEAD); \
            export VERSION="v$APP_VERSION-$TIMESTAMP-$COMMIT_HASH"
          echo "Version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
